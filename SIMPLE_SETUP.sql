-- ๐๏ธ ุณูุฑุจุช ูุจุณุท ูุฅุนุฏุงุฏ ุตุงูุฉ ุญุณุงู (ูุนูู ุฏุงุฆูุงู)
-- ุงูุณุฎ ูุงูุตู ูุฐุง ูู Supabase SQL Editor

-- 1. ุฅูุดุงุก ุฌุฏูู ุงููุดุชุฑููู
CREATE TABLE IF NOT EXISTS subscribers (
    id UUID DEFAULT gen_random_uuid() PRIMARY KEY,
    name TEXT NOT NULL,
    age INTEGER NOT NULL CHECK (age > 0 AND age < 150),
    weight DECIMAL(5,2) NOT NULL CHECK (weight > 0),
    height DECIMAL(5,2) NOT NULL CHECK (height > 0),
    phone TEXT NOT NULL,
    notes TEXT,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- 2. ุฅูุดุงุก ุฌุฏูู ุงููุฌููุนุงุช
CREATE TABLE IF NOT EXISTS groups (
    id UUID DEFAULT gen_random_uuid() PRIMARY KEY,
    subscriber_id UUID NOT NULL REFERENCES subscribers(id) ON DELETE CASCADE,
    title TEXT,
    type TEXT NOT NULL CHECK (type IN ('course', 'diet')),
    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- 3. ุฅูุดุงุก ุฌุฏูู ุนูุงุตุฑ ุงููุฌููุนุงุช
CREATE TABLE IF NOT EXISTS group_items (
    id UUID DEFAULT gen_random_uuid() PRIMARY KEY,
    group_id UUID NOT NULL REFERENCES groups(id) ON DELETE CASCADE,
    name TEXT NOT NULL,
    order_index INTEGER DEFAULT 0
);

-- 4. ุฅูุดุงุก ุฌุฏูู ุงูุชูุงุฑูู
CREATE TABLE IF NOT EXISTS course_points (
    id UUID DEFAULT gen_random_uuid() PRIMARY KEY,
    name TEXT NOT NULL UNIQUE,
    description TEXT,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- 5. ุฅูุดุงุก ุฌุฏูู ุงูุนูุงุตุฑ ุงูุบุฐุงุฆูุฉ
CREATE TABLE IF NOT EXISTS diet_items (
    id UUID DEFAULT gen_random_uuid() PRIMARY KEY,
    name TEXT NOT NULL UNIQUE,
    description TEXT,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- 6. ุฅูุดุงุก ุฌุฏูู ุงูููุชุฌุงุช (ูููุฎุฒู)
CREATE TABLE IF NOT EXISTS products (
    id UUID DEFAULT gen_random_uuid() PRIMARY KEY,
    name TEXT NOT NULL,
    description TEXT,
    price DECIMAL(10,2) NOT NULL CHECK (price >= 0),
    quantity INTEGER NOT NULL DEFAULT 0 CHECK (quantity >= 0),
    category TEXT,
    barcode TEXT UNIQUE,
    supplier TEXT,
    cost_price DECIMAL(10,2) CHECK (cost_price >= 0),
    min_stock_level INTEGER DEFAULT 5,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- 7. ุฅูุดุงุก ุฌุฏูู ุงููุจูุนุงุช
CREATE TABLE IF NOT EXISTS sales (
    id UUID DEFAULT gen_random_uuid() PRIMARY KEY,
    product_id UUID NOT NULL REFERENCES products(id) ON DELETE RESTRICT,
    buyer_name TEXT NOT NULL,
    buyer_phone TEXT,
    quantity_sold INTEGER NOT NULL CHECK (quantity_sold > 0),
    unit_price DECIMAL(10,2) NOT NULL CHECK (unit_price >= 0),
    total_price DECIMAL(10,2) NOT NULL CHECK (total_price >= 0),
    discount_amount DECIMAL(10,2) DEFAULT 0 CHECK (discount_amount >= 0),
    payment_method TEXT DEFAULT 'cash' CHECK (payment_method IN ('cash', 'card', 'transfer')),
    notes TEXT,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- 6. ุฅุฏุฑุงุฌ ุงูุชูุงุฑูู ุงูุฃุณุงุณูุฉ (ูุน ุญูุงูุฉ ูู ุงูุชูุฑุงุฑ)
DO $$
BEGIN
    IF NOT EXISTS (SELECT 1 FROM course_points LIMIT 1) THEN
        INSERT INTO course_points (name, description) VALUES
        ('ุจูุด ุจุฑุณ', 'ุชูุฑูู ุฃุณุงุณู ูุนุถูุงุช ุงูุตุฏุฑ'),
        ('ุณููุงุช', 'ุชูุฑูู ุดุงูู ูุนุถูุงุช ุงูุฃุฑุฌู'),
        ('ุฏูุฏ ูููุช', 'ุชูุฑูู ููู ูุนุถูุงุช ุงูุธูุฑ'),
        ('ุดุฏ ุนููู', 'ุชูุฑูู ูุนุถูุงุช ุงูุธูุฑ ูุงูุจุงู'),
        ('ุถุบุท ูุชู', 'ุชูุฑูู ูุนุถูุงุช ุงููุชู'),
        ('ูุงุฑุฏูู', 'ุชูุงุฑูู ุงูููุจ ูุงูุฃูุนูุฉ ุงูุฏูููุฉ'),
        ('ุชูุงุฑูู ุงูุจุทู', 'ุชูุงุฑูู ุนุถูุงุช ุงูุจุทู'),
        ('ุจุงู ุณุจุณ', 'ุชูุฑูู ููุนุถูุฉ ุฐุงุช ุงูุฑุฃุณูู'),
        ('ุชุฑุงู ุณุจุณ', 'ุชูุฑูู ููุนุถูุฉ ุซูุงุซูุฉ ุงูุฑุคูุณ');
    END IF;
END $$;

-- 7. ุฅุฏุฑุงุฌ ุงูุนูุงุตุฑ ุงูุบุฐุงุฆูุฉ ุงูุฃุณุงุณูุฉ (ูุน ุญูุงูุฉ ูู ุงูุชูุฑุงุฑ)
DO $$
BEGIN
    IF NOT EXISTS (SELECT 1 FROM diet_items LIMIT 1) THEN
        INSERT INTO diet_items (name, description) VALUES
        ('ุจูุถ ูุณููู', 'ูุตุฏุฑ ููุชุงุฒ ููุจุฑูุชูู'),
        ('ุดููุงู', 'ูุฑุจูููุฏุฑุงุช ูุนูุฏุฉ ูุฃููุงู'),
        ('ุฏุฌุงุฌ ูุดูู', 'ุจุฑูุชูู ุฎุงูู ูู ุงูุฏููู'),
        ('ุฃุฑุฒ ุจูู', 'ูุฑุจูููุฏุฑุงุช ุตุญูุฉ'),
        ('ุฎุถุฑูุงุช ูุฑููุฉ', 'ููุชุงูููุงุช ููุนุงุฏู'),
        ('ุชูุฑ', 'ุณูุฑูุงุช ุทุจูุนูุฉ ุณุฑูุนุฉ'),
        ('ููุฒ', 'ุฏููู ุตุญูุฉ ูุจุฑูุชูู ูุจุงุชู'),
        ('ุญููุจ ุฎุงูู ุงูุฏุณู', 'ูุงูุณููู ูุจุฑ๏ฟฝ๏ฟฝุชูู');
    END IF;
END $$;

-- 8. ุฅุฏุฑุงุฌ ููุชุฌุงุช ุฃุณุงุณูุฉ ูููุฎุฒู
DO $$
BEGIN
    IF NOT EXISTS (SELECT 1 FROM products LIMIT 1) THEN
        INSERT INTO products (name, description, price, quantity, category, cost_price, min_stock_level) VALUES
        ('ูุงู ุจุฑูุชูู - ูุงูููุง', 'ูููู ุจุฑูุชูู ุณุฑูุน ุงูุงูุชุตุงุต', 150.00, 50, 'ููููุงุช ุบุฐุงุฆูุฉ', 120.00, 10),
        ('ูุงู ุจุฑูุชูู - ุดููููุงุชุฉ', 'ูููู ุจุฑูุชูู ุจุทุนู ุงูุดููููุงุชุฉ', 150.00, 45, 'ููููุงุช ุบุฐุงุฆูุฉ', 120.00, 10),
        ('ูุฑูุงุชูู ููููููุฏุฑุงุช', 'ูููู ูุฒูุงุฏุฉ ุงูููุฉ ูุงูุทุงูุฉ', 80.00, 30, 'ููููุงุช ุบุฐุงุฆูุฉ', 60.00, 5),
        ('ูุดุฑูุจ ุทุงูุฉ', 'ูุดุฑูุจ ุทุงูุฉ ุทุจูุนู', 8.00, 200, 'ูุดุฑูุจุงุช', 5.00, 50),
        ('ูุงุก ุตุญู', 'ููุงู ูุนุฏููุฉ ุทุจูุนูุฉ', 2.50, 500, 'ูุดุฑูุจุงุช', 1.50, 100);
    END IF;
END $$;
END $$;

-- 3. ุชุนุทูู Row Level Security ููุจุณุงุทุฉ
ALTER TABLE subscribers DISABLE ROW LEVEL SECURITY;
ALTER TABLE groups DISABLE ROW LEVEL SECURITY;
ALTER TABLE group_items DISABLE ROW LEVEL SECURITY;
ALTER TABLE course_points DISABLE ROW LEVEL SECURITY;
ALTER TABLE diet_items DISABLE ROW LEVEL SECURITY;
ALTER TABLE products DISABLE ROW LEVEL SECURITY;
ALTER TABLE sales DISABLE ROW LEVEL SECURITY;

-- 9. ุฅูุดุงุก ููุงุฑุณ ููุฃุฏุงุก
CREATE INDEX IF NOT EXISTS idx_subscribers_name ON subscribers(name);
CREATE INDEX IF NOT EXISTS idx_groups_subscriber_id ON groups(subscriber_id);
CREATE INDEX IF NOT EXISTS idx_group_items_group_id ON group_items(group_id);
CREATE INDEX IF NOT EXISTS idx_products_name ON products(name);
CREATE INDEX IF NOT EXISTS idx_sales_product_id ON sales(product_id);
CREATE INDEX IF NOT EXISTS idx_sales_created_at ON sales(created_at);

-- โ ุชู ุงูุงูุชูุงุก! ููููู ุงูุขู ุงุณุชุฎุฏุงู ูุธุงู ุตุงูุฉ ุญุณุงู
-- ุชุญูู ูู ุงููุฌุงุญ ุจุชุดุบูู ูุฐุง ุงูุงุณุชุนูุงู:
-- SELECT 'course_points' as table_name, count(*) FROM course_points
-- UNION ALL SELECT 'diet_items', count(*) FROM diet_items
-- UNION ALL SELECT 'products', count(*) FROM products;
